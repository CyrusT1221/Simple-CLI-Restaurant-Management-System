
import java.util.Scanner;


public class Main {
	private static Waiter waiter;
	private static Chef chef;
	private static Customer customer;
	
	public static void main(String[] args) {
		 Food food1 = new Food("Spicy Shrimp Stir Fry", 12.99, "Juicy shrimp, crisp vegetables, and tangy sauce come together in this sizzling stir-fry, infused with aromatic spices for a flavorful kick");
	     Food food2 = new Food("Cheesy Bacon Macaroni", 10.49, "Indulge in creamy macaroni pasta blended with sharp cheddar cheese and crispy bacon crumbles, creating the ultimate comfort food experience");
	     Food food3 = new Food("Honey Glazed Salmon", 15.99, "Succulent salmon fillet delicately glazed with a honey marinade, perfectly grilled to lock in the natural flavors and tenderness");
	     Food food4 = new Food("Pesto Chicken Penne", 11.99, "Tender chicken breast slices tossed with al dente penne pasta, bathed in a fragrant basil pesto sauce, delivering a harmonious blend of flavors");
	     Food food5 = new Food("Gourmet Veggie Pizza", 14.49, "A crispy thin crust topped with a colorful medley of fresh vegetables, savory marinara sauce, and melted mozzarella cheese, offering a burst of garden-fresh goodness in every bite");
	     Food food6 = new Food("Teriyaki Tofu Bowl", 9.99, "Grilled tofu marinated in sweet and savory teriyaki sauce, served over a bed of fluffy rice and accompanied by stir-fried vegetables, a wholesome vegetarian delight");
	     Food food7 = new Food("BBQ Pulled Pork Sandwich", 13.49, "Tender pulled pork slow-cooked to perfection, smothered in tangy barbecue sauce, nestled between toasted brioche buns, offering a satisfyingly savory experience");
	     Food food8 = new Food("Chocolate Hazelnut Crepe", 8.99, "Thin French-style crepe filled with rich chocolate hazelnut spread, folded into a delectable parcel of sweetness, topped with a dusting of powdered sugar for a delightful finish");
	     Food food9 = new Food("Mediterranean Quinoa Salad", 11.99, "Nutrient-packed quinoa tossed with vibrant cherry tomatoes, cucumbers, olives, feta cheese, and a zesty lemon vinaigrette, delivering a refreshing taste of the Mediterranean");
	     Food food10 = new Food("Thai Red Curry Bowl", 14.99, "A fragrant blend of tender chicken, crisp vegetables, and aromatic spices simmered in creamy coconut milk, served over steamed jasmine rice, offering a harmonious balance of flavors with a hint of heat");
		
		 System.out.println("<<< Welcome to ABC Restaurant >>>");
	     while (true) {
	    	System.out.println("---------------------------------------");
			System.out.println("<<< User type >>>");
			System.out.println("1. Customer ");
			System.out.println("2. Waiter");
			System.out.println("3. Chef");
			System.out.println("---------------------------------------");
			
			Scanner scanner = new Scanner(System.in);
			int usertype = scanner.nextInt();	
			
			if (usertype == 1) {
				if (Customer.getCustomerList().size() == 0) {
					System.out.println("No valid customer account, please get one from waiter!");
	
				}
				else {
					System.out.println("Please enter your username (generated by waiter): ");
					scanner = new Scanner(System.in);
					String username = scanner.nextLine();
					customer = Customer.authenticateCustomer(username);
					while (true) {
						if (!customer.getUserName().equals("Null")) {
							customer.printCustomerOptions();
							customer.getCustomerOption();
							if (customer.getUserLogin() == false) {
								break;
							}
						}
						else {
							Customer.customerList.remove(customer);
							break;
						}
					
					}
				}
				
			}
			else if (usertype == 2) {
				waiter = new Waiter();
				waiter.setWaiterLogin(true);
				while (true) {
					waiter.printWaiterOptions();
					if (waiter.getWaiterLogin() == false) {
						break;
					}
				}
				
				
			}
			
			else if (usertype == 3) {
				chef = new Chef();
				chef.setChefLogin(true);
				while (true) {
					chef.printChefOption();
					if (chef.getChefLogin() == false) {
						break;
					}
				}
				
			}
		}
		
	}
}
